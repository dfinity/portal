# Continuous Deployment job to deploy the portal to the Internet Computer as an asset canister
# as well as to the Netlify internetcomputer.org

name: CD

on:
  push:
    branches: [master]

jobs:
  deploy-ic:
    name: "Deploy to IC"
    runs-on: ubuntu-latest

    environment:
      name: "Internet Computer Mainnet"
      url: ${{ fromJson(steps.get-url.outputs.url) }}

    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init

      # - name: Install DFX
      #   run: sh -ci "$(curl -fsSL https://internetcomputer.org/install.sh)"

      # Use unreleased dfx version to fix asset canister issue
      # https://github.com/dfinity/sdk/commit/19e18d1560aafedb3ab9764932755fd649be920a
      - name: Cache dfx binary
        id: cache-dfx-bin
        uses: actions/cache@v3
        with:
          path: sdk/target/debug/dfx
          key: dfxbin-19e18d1560aafedb3ab9764932755fd649be920a
          restore-keys: |
            - dfxbin-

      - name: Install DFX
        if: steps.cache-dfx-bin.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/dfinity/sdk.git --single-branch
          cd sdk
          git checkout 19e18d1560aafedb3ab9764932755fd649be920a
          cargo build

      - name: Add DFX to path
        run: |
          echo "`pwd`/sdk/target/debug/" >> $GITHUB_PATH

      # DFX_IDENTITY has been generated by executing:
      # `awk 'NF {sub(/\r/, ""); printf "%s\\r\\n",$0;}' ~/.config/dfx/identity/default/identity.pem`
      # on a machine where the Identity has been added as a controller of the canister
      - name: Dump Identity
        run: |
          mkdir ~/.config/dfx
          mkdir ~/.config/dfx/identity
          mkdir ~/.config/dfx/identity/default
          echo $DFX_IDENTITY > ~/.config/dfx/identity/default/identity.pem
          sed -i 's/\\r\\n/\r\n/g' ~/.config/dfx/identity/default/identity.pem
        env:
          DFX_IDENTITY: ${{ secrets.DFX_IDENTITY }}

      - name: Check Canister Status
        run: dfx canister --network ic status portal

      - name: Start deamon
        run: dfx start --background

      - name: Install Dependencies
        run: npm install

      - name: Create canister
        run: dfx canister create portal

      - name: Build canister
        run: dfx build portal
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_HOST: ${{ secrets.CONTENTFUL_HOST }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}

      - name: Deploy to Mainnet
        run: dfx deploy --network=ic --no-wallet portal
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_HOST: ${{ secrets.CONTENTFUL_HOST }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}

      - name: Get URL
        id: get-url
        run: |
          URL="https://$(cat "$GITHUB_WORKSPACE/canister_ids.json" | jq -r '.portal.ic').raw.ic0.app"
          echo "::set-output name=url::\"$URL\""
